# Runtime backends configuration
# Dev: Paiza.io is used via Vite proxy at /__paiza (see vite.config.ts). No config required.
# Optional override (not typically needed):
# VITE_PAIZA_BASE_URL=/__paiza

# Production: Paiza via Cloudflare Worker proxy (recommended)
# Deploy the worker in workers/cloudflare/paiza-proxy-worker.ts and map route
#   https://your.domain/__paiza/* -> worker
# Then build the app with:
#   VITE_PAIZA_BASE_URL=/__paiza
# If you prefer to call Paiza directly, set:
#   VITE_PAIZA_BASE_URL=https://api.paiza.io

# Judge0 (kept for future optional use)
# If you decide to use Judge0 instead, set the base URL (can be proxied too):
# VITE_JUDGE0_BASE_URL=https://ce.judge0.com
# Optional: Override Judge0 language IDs if your instance uses different IDs
# Common defaults are C (GCC 14) -> 104, C# (Mono) -> 51
# Consult your Judge0 /languages endpoint and update as needed.
# VITE_JUDGE0_C_ID=104
# VITE_JUDGE0_CSHARP_ID=51

# Dev: Test Judge0 instead of Paiza
# Option A: simple toggle
# VITE_USE_JUDGE0_IN_DEV=true
# Option B: explicit backend selector
# VITE_RUNNER_BACKEND_DEV=judge0
# When testing Judge0 in dev, it is recommended to use the Vite proxy:
# VITE_JUDGE0_BASE_URL=/__judge0
